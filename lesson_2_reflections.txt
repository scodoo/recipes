Q. What happens when you initialize a repository? Why do you need to do it?

A. Git creates the directory and files that it needs to track the files in your new repository.

----------------------------------------------------------------------

Q. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains only the files that you have told it to contain, via a git add. 
The working directory may contain other files.

The staging area allows an area to easily undo your changes.

----------------------------------------------------------------------

Q. How can you use the staging area to make sure you have one commit per logical change?

git diff --staged

shows you the difference between what you have staged and what is in the repository.
Handy to see if there is anything staged that isn't logically grouped.

----------------------------------------------------------------------

Q. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are great for any development that isn't obviously on the master branch; or changes that are going
to take a while and you want to keep the master pristine so you can switch to it at any time to fix a bug.

----------------------------------------------------------------------

git checkout -b {new-branch-game}
  shortcut for git branch {new-branch-name}
               git checkout {new-branch-name}

----------------------------------------------------------------------

Q. How do the diagrams help you visualize the branch structure?

Um, by showing the branching visually.

